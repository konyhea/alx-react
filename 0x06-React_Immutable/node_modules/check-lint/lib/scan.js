const spawn = require('cross-spawn');
const path = require('path');
const fs = require('fs');
const log = require('../utils/log');
const { name: pkgName } = require('../package.json');

const pkgConfigName = `${pkgName}Config`;

const scan = () => {
  const cwd = process.cwd();
  const targetPkgPath = path.resolve(cwd, 'package.json');
  const targetPkg = require(targetPkgPath);
  const pkgConfigPath = path.resolve(cwd, `${pkgName}.config.js`);

  let pkgConfig;
  if (fs.existsSync(pkgConfigPath)) {
    pkgConfig = require(pkgConfigPath);
  } else if (targetPkg[pkgConfigName]) {
    pkgConfig = targetPkg[pkgConfigName];
  } else {
    log.error(`${pkgConfigName} 配置缺失，请检查或执行 ${pkgName} init 重新安装`);
    process.exit(1);
  }

  log.info('执行 ESLint 检查：');
  spawn.sync(
    path.resolve(cwd, `./node_modules/${pkgName}/node_modules/.bin/eslint`),
    ['.', '--ext', 'js,jsx,ts,tsx'],
    { stdio: 'inherit' },
  );

  log.success('代码规约问题扫描完成 :D');
};

module.exports = scan;
